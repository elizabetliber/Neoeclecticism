{"version":3,"sources":["01_main.js"],"names":["forEach","array","callback","scope","i","length","call","tabNodes","document","querySelectorAll","articleNodes","handleTab","index","value","classList","remove","add","addEventListener","console","log","accordionItemHeaders","headerType","Typed","strings","typeSpeed","backSpeed","startDelay","backDelay","loop","loopCount","Infinity","accordionItemHeader","event","currentlyActiveAccordionItemHeader","querySelector","toggle","nextElementSibling","style","maxHeight","accordionItemBody","contains","scrollHeight"],"mappings":"AAAA,SAASA,QAASC,EAAOC,EAAUC,GAC/B,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAMI,OAAQD,IAC9BF,EAASI,KAAKH,EAAOC,EAAGH,EAAMG,IAItC,IAAIG,SAAWC,SAASC,iBAAiB,yBACrCC,aAAeF,SAASC,iBAAiB,2BAW7C,SAASE,UAAUP,GACfJ,QAAQU,cAAc,SAAUE,EAAOC,GACnCH,aAAaE,GAAOE,UAAUC,OAAO,UACrCR,SAASK,GAAOE,UAAUC,OAAO,aAGrCL,aAAaN,GAAGU,UAAUE,IAAI,UAC9BT,SAASH,GAAGU,UAAUE,IAAI,UAhB9BN,aAAa,GAAGI,UAAUE,IAAI,UAC9BT,SAAS,GAAGO,UAAUE,IAAI,UAC1BhB,QAAQO,UAAU,SAAUK,EAAOC,GAC/BA,EAAMI,iBAAiB,SAAS,WAC5BC,QAAQC,IAAI,SACZR,UAAUC,SAgBlB,MAAMQ,qBAAuBZ,SAASC,iBAClC,0BA2BJ,SAASY,aACS,IAAIC,MAAM,qBAAsB,CAC1CC,QAAS,CAAC,eAAgB,sBAC1BC,UAAW,GACXC,UAAW,GACXC,WAAY,IACZC,UAAW,KACXC,MAAM,EACNC,UAAWC,EAAAA,IAhCnBV,qBAAqBpB,QAAS+B,IAC1BA,EAAoBd,iBAAiB,QAAUe,IAG3C,MAAMC,EAAqCzB,SAAS0B,cAChD,iCAGAD,GACAA,IAAuCF,IAEvCE,EAAmCnB,UAAUqB,OAAO,UACpDF,EAAmCG,mBAAmBC,MAAMC,UAAY,GAE5EP,EAAoBjB,UAAUqB,OAAO,UACrC,MAAMI,EAAoBR,EAAoBK,mBAC1CL,EAAoBjB,UAAU0B,SAAS,UACvCD,EAAkBF,MAAMC,UAAYC,EAAkBE,aAAe,KAErEF,EAAkBF,MAAMC,UAAY,MAgBhDjB","file":"../js/main.min.js","sourcesContent":["function forEach (array, callback, scope) {\n    for (let i = 0; i < array.length; i++) {\n        callback.call(scope, i, array[i]);\n    }\n};\n\nlet tabNodes = document.querySelectorAll('.tab-group button.tab');\nlet articleNodes = document.querySelectorAll('.tab-group .tab-content');\n\narticleNodes[0].classList.add('active');\ntabNodes[0].classList.add('active');\nforEach(tabNodes, function (index, value) {\n    value.addEventListener(\"click\", function(){\n        console.log(\"hello\")\n        handleTab(index);\n    })\n});\n\nfunction handleTab(i) {\n    forEach(articleNodes, function (index, value) {\n        articleNodes[index].classList.remove('active');\n        tabNodes[index].classList.remove('active');\n    });\n\n    articleNodes[i].classList.add('active');\n    tabNodes[i].classList.add('active');\n}\n\n///////////////////////////////////////////////////////////////////////////\n\nconst accordionItemHeaders = document.querySelectorAll(\n    \".accordion-item-header\"\n);\n\naccordionItemHeaders.forEach((accordionItemHeader) => {\n    accordionItemHeader.addEventListener(\"click\", (event) => {\n        // Uncomment in case you only want to allow for the display of only one collapsed item at a time!\n\n        const currentlyActiveAccordionItemHeader = document.querySelector(\n            \".accordion-item-header.active\"\n        );\n        if (\n            currentlyActiveAccordionItemHeader &&\n            currentlyActiveAccordionItemHeader !== accordionItemHeader\n        ) {\n            currentlyActiveAccordionItemHeader.classList.toggle(\"active\");\n            currentlyActiveAccordionItemHeader.nextElementSibling.style.maxHeight = 0;\n        }\n        accordionItemHeader.classList.toggle(\"active\");\n        const accordionItemBody = accordionItemHeader.nextElementSibling;\n        if (accordionItemHeader.classList.contains(\"active\")) {\n            accordionItemBody.style.maxHeight = accordionItemBody.scrollHeight + \"px\";\n        } else {\n            accordionItemBody.style.maxHeight = 0;\n        }\n    });\n});\n\nfunction headerType() {\n    const typed = new Typed('.hero__title-typed', {\n        strings: [\"Wallet music\", \"Blockchain history\"],\n        typeSpeed: 80,\n        backSpeed: 25,\n        startDelay: 1000,\n        backDelay: 1200,\n        loop: true,\n        loopCount: Infinity,\n    });\n}\nheaderType();\n\n// document.addEventListener('DOMContentLoaded', function(){\n//     Typed.new('.type', {\n//         strings: [\"Wallet music Blockchain history\"],\n//         stringsElement: null,\n//         // typing speed\n//         typeSpeed: 60,\n//         // time before typing starts\n//         startDelay: 600,\n//         // backspacing speed\n//         backSpeed: 20,\n//         // time before backspacing\n//         backDelay: 500,\n//         // loop\n//         loop: true,\n//         // false = infinite\n//         loopCount: 5,\n//         // show cursor\n//         showCursor: false,\n//         // character for cursor\n//         cursorChar: \"|\",\n//         // attribute to type (null == text)\n//         attr: null,\n//         // either html or text\n//         contentType: 'html',\n//     });\n// });"]}